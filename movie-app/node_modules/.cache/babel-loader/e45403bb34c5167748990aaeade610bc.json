{"ast":null,"code":"var _jsxFileName = \"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MainTrivia.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\nimport { FaChevronRight } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainTrivia() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = React.useState(true);\n  const [trivia, setTrivia] = React.useState([]);\n  const [triviaToShow, setTriviaToShow] = React.useState([]);\n  const [offset, setOffset] = React.useState(1);\n  React.useEffect(() => {\n    setLoading(true);\n    async function getTrivia() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-trivia?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\"\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(\"trivia\", data);\n        const spoilt = data.spoilt;\n        console.log(\"spoilt\", spoilt);\n        const unspoilt = data.unspoilt;\n        console.log(\"unspoilt\", unspoilt);\n        const apiResponse = [...spoilt, ...unspoilt];\n        console.log(\"apiResponse\", apiResponse);\n        if (apiResponse) {\n          const newTrivia = [];\n          apiResponse.map(item => {\n            const {\n              text\n            } = item;\n            newTrivia.push({\n              triviaText: text\n            });\n          });\n          console.log(\"newTrivia\", newTrivia);\n          setTrivia(newTrivia);\n          setTriviaToShow(newTrivia.slice(0, offset));\n        } else {\n          setTrivia([]);\n        }\n        setLoading(false);\n      }).catch(err => {\n        console.error(err);\n        setLoading(false);\n      });\n    }\n    getTrivia();\n  }, []);\n  const renderTrivia = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: triviaToShow.length === 0 ? \" \" : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"grid\",\n              gridTemplateColumns: \"0.04fr 0.04fr\",\n              gridGap: \"2px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-title\",\n              style: {\n                marginBottom: \"0rem\",\n                textAlign: \"left\",\n                marginTop: \"3.5rem\",\n                paddingLeft: \"2rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: \"black\",\n                  marginBottom: \"0rem\"\n                },\n                children: \"Trivia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"underline\",\n                style: {\n                  marginLeft: \"0\",\n                  marginRight: \"0\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"next-btn\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/trivia/${id}`,\n                className: \"btn btn-primary btn-details\",\n                target: \"_blank\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    size: \"7rem\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: triviaToShow.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trivia\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.triviaText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderTrivia()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 10\n  }, this);\n}\n_s(MainTrivia, \"O3REP5BVgABdzTcMZKsmhUPxRbg=\", false, function () {\n  return [useParams];\n});\n_c = MainTrivia;\nvar _c;\n$RefreshReg$(_c, \"MainTrivia\");","map":{"version":3,"names":["React","useParams","Link","Card","FaChevronRight","jsxDEV","_jsxDEV","MainTrivia","_s","id","loading","setLoading","useState","trivia","setTrivia","triviaToShow","setTriviaToShow","offset","setOffset","useEffect","getTrivia","fetch","method","headers","then","response","json","data","console","log","spoilt","unspoilt","apiResponse","newTrivia","map","item","text","push","triviaText","slice","catch","err","error","renderTrivia","children","length","style","display","gridTemplateColumns","gridGap","className","marginBottom","textAlign","marginTop","paddingLeft","color","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","marginRight","to","target","size","index","_c","$RefreshReg$"],"sources":["/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MainTrivia.js"],"sourcesContent":["import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\nimport { FaChevronRight } from \"react-icons/fa\";\n\nexport default function MainTrivia() {\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(true);\n  const [trivia, setTrivia] = React.useState([]);\n  const [triviaToShow, setTriviaToShow] = React.useState([]);\n  const [offset, setOffset] = React.useState(1);\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getTrivia() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-trivia?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"trivia\", data);\n          const spoilt = data.spoilt;\n          console.log(\"spoilt\", spoilt);\n          const unspoilt = data.unspoilt;\n          console.log(\"unspoilt\", unspoilt);\n          const apiResponse = [...spoilt, ...unspoilt];\n          console.log(\"apiResponse\", apiResponse);\n          if (apiResponse) {\n            const newTrivia = [];\n            apiResponse.map((item) => {\n              const { text } = item;\n              newTrivia.push({\n                triviaText: text,\n              });\n            });\n            console.log(\"newTrivia\", newTrivia);\n            setTrivia(newTrivia);\n            setTriviaToShow(newTrivia.slice(0, offset));\n          } else {\n            setTrivia([]);\n          }\n\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n\n    getTrivia();\n  }, []);\n\n  \n\n  const renderTrivia = () => {\n    return (\n      <div>\n        {triviaToShow.length === 0 ? (\n          \" \"\n        ) : (\n          <div>\n            <Card>\n              <div\n                style={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"0.04fr 0.04fr\",\n                  gridGap: \"2px\",\n                }}\n              >\n                <div\n                  className=\"section-title\"\n                  style={{\n                    marginBottom: \"0rem\",\n                    textAlign: \"left\",\n                    marginTop: \"3.5rem\",\n                    paddingLeft: \"2rem\",\n                  }}\n                >\n                  <h3\n                    style={{\n                      color: \"black\",\n                      marginBottom: \"0rem\",\n                    }}\n                  >\n                    Trivia\n                  </h3>\n                  <div\n                    className=\"underline\"\n                    style={{ marginLeft: \"0\", marginRight: \"0\" }}\n                  ></div>\n                </div>\n                <div className=\"next-btn\">\n                  <Link\n                    to={`/trivia/${id}`}\n                    className=\"btn btn-primary btn-details\"\n                    target=\"_blank\"\n                  >\n                    <span style={{ size: \"7rem\" }}>\n                      <FaChevronRight />\n                    </span>\n                  </Link>\n                </div>\n              </div>\n            </Card>\n            <Card>\n              {triviaToShow.map((item , index) => {\n                return (\n                  <div className=\"trivia\" key = {index}>\n                    <Card>\n                      <p>{item.triviaText}</p>\n                    </Card>\n                  </div>\n                );\n              })}\n            </Card>\n          </div>\n        )}\n      </div>\n    );\n  };\n  return <div>{renderTrivia()}</div>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/aashiyatanwar/MovieProject/movie-app/src/Trivia.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Trivia() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = React.useState(true);\n  const [trivia, setTrivia] = React.useState([]);\n  const [triviaToShow, setTriviaToShow] = React.useState([]);\n  const [offset, setOffset] = React.useState(1);\n  React.useEffect(() => {\n    setLoading(true);\n    async function getTrivia() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-trivia?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\"\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(\"trivia\", data);\n        const spoilt = data.spoilt;\n        console.log(\"spoilt\", spoilt);\n        const unspoilt = data.unspoilt;\n        console.log(\"unspoilt\", unspoilt);\n        const apiResponse = [...spoilt, ...unspoilt];\n        console.log(\"apiResponse\", apiResponse);\n        if (apiResponse) {\n          const newTrivia = [];\n          apiResponse.map(item => {\n            const {\n              text\n            } = item;\n            newTrivia.push({\n              triviaText: text\n            });\n          });\n          console.log(\"newTrivia\", newTrivia);\n          setTrivia(newTrivia);\n          setTriviaToShow(newTrivia.slice(0, offset));\n        } else {\n          setTrivia([]);\n        }\n        setLoading(false);\n      }).catch(err => {\n        console.error(err);\n        setLoading(false);\n      });\n    }\n    getTrivia();\n  }, []);\n  const renderTrivia = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: trivia.length === 0 ? \" \" : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"section-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: \"black\"\n              },\n              children: \"Trivia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"underline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: trivia.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trivia\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.triviaText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderTrivia()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n}\n_s(Trivia, \"O3REP5BVgABdzTcMZKsmhUPxRbg=\", false, function () {\n  return [useParams];\n});\n_c = Trivia;\nvar _c;\n$RefreshReg$(_c, \"Trivia\");","map":{"version":3,"names":["React","useParams","Card","jsxDEV","_jsxDEV","Trivia","_s","id","loading","setLoading","useState","trivia","setTrivia","triviaToShow","setTriviaToShow","offset","setOffset","useEffect","getTrivia","fetch","method","headers","then","response","json","data","console","log","spoilt","unspoilt","apiResponse","newTrivia","map","item","text","push","triviaText","slice","catch","err","error","renderTrivia","children","length","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/home/aashiyatanwar/MovieProject/movie-app/src/Trivia.js"],"sourcesContent":["import React from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\n\nexport default function Trivia() {\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(true);\n  const [trivia, setTrivia] = React.useState([]);\n  const [triviaToShow, setTriviaToShow] = React.useState([]);\n  const [offset, setOffset] = React.useState(1);\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getTrivia() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-trivia?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"trivia\", data);\n          const spoilt = data.spoilt;\n          console.log(\"spoilt\", spoilt);\n          const unspoilt = data.unspoilt;\n          console.log(\"unspoilt\", unspoilt);\n          const apiResponse = [...spoilt, ...unspoilt];\n          console.log(\"apiResponse\", apiResponse);\n          if (apiResponse) {\n            const newTrivia = [];\n            apiResponse.map((item) => {\n              const { text } = item;\n              newTrivia.push({\n                triviaText: text,\n              });\n            });\n            console.log(\"newTrivia\", newTrivia);\n            setTrivia(newTrivia);\n            setTriviaToShow(newTrivia.slice(0, offset));\n          } else {\n            setTrivia([]);\n          }\n\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n\n    getTrivia();\n  }, []);\n\n  const renderTrivia = () => {\n    return (\n      <div>\n        {trivia.length === 0 ? (\n          \" \"\n        ) : (\n          <div>\n            <Card>\n              <section className=\"section-title\">\n                <h3 style={{ color: \"black\" }}>Trivia</h3>\n                <div className=\"underline\"></div>\n              </section>\n            </Card>\n            <Card>\n              \n              {trivia.map((item,index) => {\n                return (\n                  <div className=\"trivia\" key={index}>\n                    <Card>\n                    <p>{item.triviaText}</p>\n                    </Card>\n                  </div>\n                );\n              })}\n              \n            </Card>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return <div>{renderTrivia()}</div>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
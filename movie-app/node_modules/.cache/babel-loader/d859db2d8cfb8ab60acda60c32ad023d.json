{"ast":null,"code":"var _jsxFileName = \"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/TopCast.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TopCast() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [castId, setCastId] = React.useState([]);\n  const [cast, setCast] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const newCast = [];\n  React.useEffect(() => {\n    setLoading(true);\n    function getCast() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-top-cast?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\"\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(\"dataCast\", data);\n        const apiResponse = [];\n        apiResponse.push(data);\n        const arr = apiResponse.toString();\n        const cast = arr.split(\"/\");\n        console.log(\"castArr\", cast);\n        const castID = [];\n        cast.forEach(value => {\n          //console.log(\"value\" , value);\n          if (value.startsWith(\"nm\")) {\n            castID.push({\n              cID: value\n            });\n          }\n        });\n        console.log(\"castId\", castID);\n        setCastId(castID.slice(0, 3));\n        setLoading(false);\n      }).catch(err => {\n        console.error(err);\n        setLoading(false);\n      });\n    }\n    getCast();\n  }, []);\n  React.useEffect(() => {\n    setLoading(true);\n    castId.map(ids => {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-charname-list?id=${ids.cID}&tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\"\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(\"charnameData\", data);\n        const apiResponse = data[ids.cID].charname;\n        console.log(\"apiResponse\", apiResponse);\n        if (apiResponse) {\n          apiResponse.map(item => {\n            const {\n              characters,\n              endYear,\n              episodeCount,\n              image,\n              name,\n              startYear\n            } = item;\n            newCast.push({\n              charname: characters ? characters : \"Not available\",\n              endYear: endYear ? endYear : \"Not available\",\n              startYear: startYear ? startYear : \"Not available\",\n              episodeCount: episodeCount ? episodeCount : \"Not available\",\n              image: image.url ? image.url : \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\",\n              name: name ? name : \"Not available\"\n            });\n          });\n        }\n        setLoading(false);\n      });\n    });\n    setCast(newCast);\n    console.log(\"cast\", newCast);\n  }, [castId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"black\"\n          },\n          children: \"Cast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: cast.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-movie\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image,\n              alt: item.image,\n              className: \"person-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"single-movie-info\",\n              style: {\n                color: \"black\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"single-movie-data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this), \" \", item.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"single-movie-data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this), \" \", item.charname]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"single-movie-data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), \" \", item.startYear, \"-\", item.endYear]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"single-movie-data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), item.episodeCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(TopCast, \"wIbpNpgWbUx2HFRx9FAt7lwdjPs=\", false, function () {\n  return [useParams];\n});\n_c = TopCast;\nvar _c;\n$RefreshReg$(_c, \"TopCast\");","map":{"version":3,"names":["React","useParams","Card","Loading","jsxDEV","_jsxDEV","TopCast","_s","id","castId","setCastId","useState","cast","setCast","loading","setLoading","newCast","useEffect","getCast","fetch","method","headers","then","response","json","data","console","log","apiResponse","push","arr","toString","split","castID","forEach","value","startsWith","cID","slice","catch","err","error","map","ids","charname","item","characters","endYear","episodeCount","image","name","startYear","url","children","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","index","src","alt","_c","$RefreshReg$"],"sources":["/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/TopCast.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\nimport Loading from \"./Loading\";\n\nexport default function TopCast() {\n  const { id } = useParams();\n  const [castId, setCastId] = React.useState([]);\n  const [cast, setCast] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const newCast = [];\n\n  React.useEffect(() => {\n    setLoading(true);\n    function getCast() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-top-cast?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"dataCast\", data);\n          const apiResponse = [];\n          apiResponse.push(data);\n          const arr = apiResponse.toString();\n          const cast = arr.split(\"/\");\n          console.log(\"castArr\", cast);\n          const castID = [];\n          cast.forEach((value) => {\n            //console.log(\"value\" , value);\n            if (value.startsWith(\"nm\")) {\n              castID.push({ cID: value });\n            }\n          });\n          console.log(\"castId\", castID);\n          setCastId(castID.slice(0, 3));\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n    getCast();\n  }, []);\n\n  React.useEffect(() => {\n    setLoading(true);\n    castId.map((ids) => {\n      fetch(\n        `https://imdb8.p.rapidapi.com/title/get-charname-list?id=${ids.cID}&tconst=${id}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-key\":\n              \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n            \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n          },\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"charnameData\", data);\n          const apiResponse = data[ids.cID].charname;\n          console.log(\"apiResponse\", apiResponse);\n          if (apiResponse) {\n            apiResponse.map((item) => {\n              const {\n                characters,\n                endYear,\n                episodeCount,\n                image,\n                name,\n                startYear,\n              } = item;\n              newCast.push({\n                charname: characters ? characters : \"Not available\",\n                endYear: endYear ? endYear : \"Not available\",\n                startYear: startYear ? startYear : \"Not available\",\n                episodeCount: episodeCount ? episodeCount : \"Not available\",\n                image: image.url\n                  ? image.url\n                  : \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\",\n                name: name ? name : \"Not available\",\n              });\n            });\n          }\n          setLoading(false);\n        });\n    });\n\n    setCast(newCast);\n    console.log(\"cast\", newCast);\n  }, [castId]);\n\n  return (\n    <div>\n      <Card>\n        <section className=\"section-title\">\n          <h3 style={{ color: \"black\" }}>Cast</h3>\n          <div className=\"underline\"></div>\n        </section>\n      </Card>\n      <Card>\n        {cast.map((item, index) => {\n          return (\n            <div key={index}>\n              <div className=\"single-movie\">\n                <img\n                  src={item.image}\n                  alt={item.image}\n                  className=\"person-img\"\n                ></img>\n                <div className=\"single-movie-info\" style={{ color: \"black\" }}>\n                  <p>\n                    <span className=\"single-movie-data\"></span> {item.name}\n                  </p>\n                  <p>\n                    <span className=\"single-movie-data\"></span> {item.charname}\n                  </p>\n                  <p>\n                    <span className=\"single-movie-data\"></span> {item.startYear}\n                    -{item.endYear}\n                  </p>\n                  <p>\n                    <span className=\"single-movie-data\"></span>\n                    {item.episodeCount}\n                  </p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Card>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Videos.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\n//import { ReactVideo } from \"reactjs-media\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Videos() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = React.useState(true);\n  const [videoID, setVideoID] = React.useState([]);\n  const [playURL, setPlayUrl] = React.useState([]);\n  React.useEffect(() => {\n    setLoading(true);\n    async function getVideos() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-videos?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\"\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(\"data\", data);\n        const apiResponse = data.resource.videos;\n        console.log(\"apiResponse\", apiResponse);\n        if (apiResponse) {\n          const newVideo = [];\n          apiResponse.map(item => {\n            const {\n              id\n            } = item;\n            newVideo.push({\n              vidID: id.substr(9, id.length)\n            });\n          });\n          console.log(\"newVideo\", newVideo);\n          setVideoID(newVideo.slice(0, 5));\n        }\n        setLoading(false);\n      }).catch(err => {\n        console.error(err);\n        setLoading(false);\n      });\n    }\n    getVideos();\n  }, []);\n  React.useEffect(() => {\n    const playURLs = [];\n    videoID.map(id => {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-video-playback?viconst=${id.vidID}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\"\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(\"playback\", data);\n        const apiResponse = [];\n        apiResponse.push(data.resource);\n        console.log(\"apiResponse\", apiResponse);\n        if (apiResponse) {\n          apiResponse.map(resource => {\n            //resource.previews && playURLs.push(resource.previews);\n            if (\"previews\" in resource) {\n              const {\n                previews\n              } = resource;\n              playURLs.push({\n                previews: previews\n              });\n            }\n          });\n          console.log(\"playURLs\", playURLs);\n          setPlayUrl(playURLs);\n        }\n      });\n    });\n  }, [videoID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: playURL.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            src: item.previews.playUrl,\n            controls: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 11\n  }, this);\n}\n_s(Videos, \"+sqjEvPQL+6xLAOH4pJrmHlL0WE=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useParams","Link","Card","jsxDEV","_jsxDEV","Videos","_s","id","loading","setLoading","useState","videoID","setVideoID","playURL","setPlayUrl","useEffect","getVideos","fetch","method","headers","then","response","json","data","console","log","apiResponse","resource","videos","newVideo","map","item","push","vidID","substr","length","slice","catch","err","error","playURLs","previews","children","index","src","playUrl","controls","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Videos.js"],"sourcesContent":["import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\n//import { ReactVideo } from \"reactjs-media\";\n\nexport default function Videos() {\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(true);\n  const [videoID, setVideoID] = React.useState([]);\n  const [playURL , setPlayUrl] = React.useState([])\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getVideos() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-videos?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"data\", data);\n          const apiResponse = data.resource.videos;\n          console.log(\"apiResponse\", apiResponse);\n          if (apiResponse) {\n            const newVideo = [];\n            apiResponse.map((item) => {\n              const { id } = item;\n              newVideo.push({\n                vidID: id.substr(9, id.length),\n              });\n            });\n            console.log(\"newVideo\", newVideo);\n            setVideoID(newVideo.slice(0, 5));\n          }\n\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n\n    getVideos();\n  }, []);\n\n  React.useEffect(() => {\n    const playURLs = [];\n    videoID.map((id) => {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-video-playback?viconst=${id.vidID}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"playback\", data)\n        const apiResponse = []\n        apiResponse.push(data.resource)\n        console.log(\"apiResponse\" , apiResponse)\n        if(apiResponse){\n        apiResponse.map((resource) => {\n           //resource.previews && playURLs.push(resource.previews);\n           if(\"previews\" in resource){\n             const { previews } = resource\n             playURLs.push({previews : previews})\n           }\n        })\n        console.log(\"playURLs\",playURLs)\n        setPlayUrl(playURLs)\n      }\n      })\n    })\n  }, [videoID]);\n\n  return (<div>\n    <Card>\n    {playURL.map((item,index)=>{\n      return(\n        <div key ={index}>\n          <video src = {item.previews.playUrl}  controls/>\n        </div>\n      )\n    })}\n    </Card>\n  </div>);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
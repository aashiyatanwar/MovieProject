[{"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/index.js":"1","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/context.js":"2","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/App.js":"3","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/CrazyCredits.js":"4","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/SingleMovie.js":"5","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Home.js":"6","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Trivia.js":"7","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Reviews.js":"8","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/SingleShow.js":"9","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Images.js":"10","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Loading.js":"11","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/DidYouKnow.js":"12","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MainImages.js":"13","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MainReview.js":"14","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Videos.js":"15","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MovieList.js":"16","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/TopCast.js":"17","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/SearchForm.js":"18","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/PopularMovie.js":"19","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MainCrazyCredits.js":"20","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MainTrivia.js":"21","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Movie.js":"22"},{"size":334,"mtime":1624434920096,"results":"23","hashOfConfig":"24"},{"size":1958,"mtime":1625553960666,"results":"25","hashOfConfig":"24"},{"size":1151,"mtime":1624434941771,"results":"26","hashOfConfig":"24"},{"size":3146,"mtime":1624433512222,"results":"27","hashOfConfig":"24"},{"size":4882,"mtime":1625817370755,"results":"28","hashOfConfig":"24"},{"size":295,"mtime":1626421914661,"results":"29","hashOfConfig":"24"},{"size":2560,"mtime":1624433666475,"results":"30","hashOfConfig":"24"},{"size":4055,"mtime":1624433627137,"results":"31","hashOfConfig":"24"},{"size":5570,"mtime":1625816229542,"results":"32","hashOfConfig":"24"},{"size":3134,"mtime":1624353974045,"results":"33","hashOfConfig":"24"},{"size":121,"mtime":1623653988025,"results":"34","hashOfConfig":"24"},{"size":487,"mtime":1624272762113,"results":"35","hashOfConfig":"24"},{"size":2773,"mtime":1625553966002,"results":"36","hashOfConfig":"24"},{"size":3658,"mtime":1625553967934,"results":"37","hashOfConfig":"24"},{"size":2711,"mtime":1624457024624,"results":"38","hashOfConfig":"24"},{"size":768,"mtime":1623829085775,"results":"39","hashOfConfig":"24"},{"size":4384,"mtime":1625821369781,"results":"40","hashOfConfig":"24"},{"size":765,"mtime":1623654057492,"results":"41","hashOfConfig":"24"},{"size":1213,"mtime":1627040307014,"results":"42","hashOfConfig":"24"},{"size":3566,"mtime":1625553964662,"results":"43","hashOfConfig":"24"},{"size":3747,"mtime":1625553969299,"results":"44","hashOfConfig":"24"},{"size":709,"mtime":1623831788464,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3eby27",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/index.js",[],"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/context.js",["104"],"import React, { useState, useContext } from \"react\";\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [loading, setloading] = useState(true);\n  const [searchTerm, setsearchTerm] = useState(\"\");\n  const [movies, setmovies] = useState([]);\n\n  const fetchMovies = () => {\n    setloading(true);\n    fetch(`https://imdb8.p.rapidapi.com/title/find?q=${searchTerm}`, {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n        \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        const apiresponse = data.results;\n        console.log(apiresponse);\n\n        if (apiresponse) {\n          const newMovies = [];\n          apiresponse.map((item) => {\n            if (!(\"knownFor\" in item)) {\n              const { id, titleType, image, title, year } = item;\n              newMovies.push({\n                id: id.substr(7, id.length - 1),\n                name: title,\n                image: image\n                  ? image.url\n                  : \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\",\n                titleType: titleType,\n                year: year,\n              });\n            }\n          });\n          console.log(newMovies);\n          setmovies(newMovies);\n        } else {\n          setmovies([]);\n        }\n        setloading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setloading(false);\n      });\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        loading,\n        searchTerm,\n        movies,\n        setsearchTerm,\n        setmovies,\n        setloading,\n        fetchMovies,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/App.js",[],"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/CrazyCredits.js",["105","106","107"],"import React from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\n\nexport default function MainCrazyCredits() {\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(false);\n  const [info, setInfo] = React.useState({});\n  const [credits, setCredits] = React.useState([]);\n\n  React.useEffect(() => {\n    setLoading(true);\n    function getCredits() {\n      fetch(\n        `https://imdb8.p.rapidapi.com/title/get-crazycredits?tconst=${id}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-key\":\n              \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n            \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n          },\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"data\", data);\n          const newInfo = {\n            title: data.title,\n            titleType: data.titleType,\n            year: data.year,\n          };\n          console.log(\"newInfo\", newInfo);\n          setInfo(newInfo);\n\n          const apiResponse = data.crazycredits;\n          console.log(apiResponse);\n          if (apiResponse) {\n            const newCredits = [];\n            apiResponse.map((item) => {\n              const { text } = item;\n              newCredits.push({\n                text: text,\n              });\n            });\n            console.log(\"newCredits\", newCredits);\n            setCredits(newCredits);\n          } else {\n            setCredits([]);\n          }\n\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n    getCredits();\n  }, []);\n\n  const { title, titleType, year } = info;\n  console.log(\"info\", info);\n\n  const renderCredits = () => {\n    return (\n      <div>\n        <Card>\n          <div\n            className=\"section-title\"\n            style={{ textAlign: \"left\", marginTop: \"2rem\" }}\n          >\n            <h3\n              style={{ textAlign: \"left\", color: \"black\", paddingLeft: \"2rem\" }}\n            >\n              {title}\n            </h3>\n          </div>\n          <div\n            className=\"underline\"\n            style={{ marginLeft: \"2rem\", marginRight: \"2rem\" }}\n          ></div>\n          <div>\n            <h5\n              style={{ textAlign: \"left\", color: \"black\", paddingLeft: \"2rem\" }}\n            >\n              {titleType}\n            </h5>\n            <h5\n              style={{ textAlign: \"left\", color: \"black\", paddingLeft: \"2rem\" }}\n            >\n              {year}\n            </h5>\n          </div>\n        </Card>\n        <div style={{ marginBottom: \"25rem\" }}>\n          <Card>\n            {credits.map((item, index) => {\n              return (\n                <div\n                  className=\"trivia\"\n                  key={index}\n                  style={{ marginTop: \"3rem\" }}\n                >\n                  <p>{item.text}</p>\n                </div>\n              );\n            })}\n          </Card>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Card>{renderCredits()}</Card>\n    </div>\n  );\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/SingleMovie.js",["108","109","110"],"import React from \"react\";\nimport Loading from \"./Loading\";\nimport { useParams, Link } from \"react-router-dom\";\nimport MainReview from \"./MainReview\";\nimport { Card } from \"@material-ui/core\";\nimport MainImages from \"./MainImages\";\nimport DidYouKnow from \"./DidYouKnow\";\nimport Videos from \"./Videos\";\nimport TopCast from \"./TopCast\";\n\nexport default function SingleMovie() {\n  const { id } = useParams();\n  console.log(id);\n  const [loading, setLoading] = React.useState(false);\n  const [plot, setPlot] = React.useState(\"\");\n  const [details, setDetails] = React.useState({});\n  const [showLess, setShowLess] = React.useState(true);\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getPlot() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-synopses?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          const plot = data[0] ? data[0].text : \"\";\n          //console.log(\"plot\", plot);\n          setPlot(plot);\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n\n    async function getDetails() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-meta-data?ids=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          const info = {\n            image: data[id].title.image\n              ? data[id].title.image.url\n              : \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\",\n            title: data[id].title.title,\n            titleType: data[id].title.titleType,\n            year: data[id].title.year ? data[id].title.year : \"Not available\",\n            rating: data[id].ratings.rating\n              ? data[id].ratings.rating\n              : \"Not available\",\n            topRank: data[id].ratings.topRank\n              ? data[id].ratings.topRank\n              : \"Not available\",\n            releaseDate: data[id].releaseDate\n              ? data[id].releaseDate\n              : \"Not available\",\n          };\n          setDetails(info);\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n    getDetails();\n    getPlot();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n  const {\n    image,\n    titleType,\n    title,\n    year,\n    rating,\n    topRank,\n    releaseDate,\n  } = details;\n  console.log(details);\n\n  return (\n    <section className=\"section movie-section\">\n      <Link to=\"/\" className=\"btn btn-primary\">\n        back home\n      </Link>\n      <section className=\"section-title\">\n        <h2>{title}</h2>\n        <div className=\"underline\"></div>\n      </section>\n      <div className=\"single-movie\">\n        <img src={image} alt={image} className=\"img\"></img>\n        {/*<Card>*/}\n        <div className=\"single-movie-info\">\n          <p>\n            <span className=\"single-movie-data\">Title Type:</span> {titleType}\n          </p>\n          <p>\n            <span className=\"single-movie-data\">Year:</span> {year}\n          </p>\n          <p>\n            <span className=\"single-movie-data\">Release date:</span>\n            {releaseDate}\n          </p>\n          <p>\n            <span className=\"single-movie-data\">Rating:</span> {rating}\n          </p>\n          <p>\n            <span className=\"single-movie-data\">Top Rank:</span> {topRank}\n          </p>\n        </div>\n        {/*</Card>*/}\n      </div>\n      <div>\n        {plot === \"\" ? (\n          \" \"\n        ) : (\n          <Card>\n            <section className=\"section-title\">\n              <h3 style={{ color: \"black\" }}>Storyline</h3>\n              <div className=\"underline\"></div>\n            </section>\n            <div className=\"plot\">\n              <p> {showLess ? `${plot.slice(0, 500)}` : plot}</p>\n              {plot === \"\" ? (\n                \" \"\n              ) : (\n                <>\n                  <a\n                    style={{ color: \"blue\", cursor: \"pointer\" }}\n                    onClick={() => setShowLess(!showLess)}\n                  >\n                    Read {showLess ? \"More\" : \"Less\"}\n                  </a>\n                </>\n              )}\n            </div>\n          </Card>\n        )}\n      </div>\n      {/*<div>{<Videos/>}</div>*/}\n      <div>{<TopCast/>}</div>\n      <div>{<MainReview />}</div>\n      <div>{<MainImages />}</div>\n      <div>{<DidYouKnow/>}</div>\n      \n    </section>\n  );\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Home.js",[],"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Trivia.js",["111","112","113","114","115"],"import React from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\n\nexport default function Trivia() {\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(true);\n  const [trivia, setTrivia] = React.useState([]);\n  const [triviaToShow, setTriviaToShow] = React.useState([]);\n  const [offset, setOffset] = React.useState(1);\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getTrivia() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-trivia?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"trivia\", data);\n          const spoilt = data.spoilt;\n          console.log(\"spoilt\", spoilt);\n          const unspoilt = data.unspoilt;\n          console.log(\"unspoilt\", unspoilt);\n          const apiResponse = [...spoilt, ...unspoilt];\n          console.log(\"apiResponse\", apiResponse);\n          if (apiResponse) {\n            const newTrivia = [];\n            apiResponse.map((item) => {\n              const { text } = item;\n              newTrivia.push({\n                triviaText: text,\n              });\n            });\n            console.log(\"newTrivia\", newTrivia);\n            setTrivia(newTrivia);\n            setTriviaToShow(newTrivia.slice(0, offset));\n          } else {\n            setTrivia([]);\n          }\n\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n\n    getTrivia();\n  }, []);\n\n  const renderTrivia = () => {\n    return (\n      <div>\n        {trivia.length === 0 ? (\n          \" \"\n        ) : (\n          <div>\n            <Card>\n              <section className=\"section-title\">\n                <h3 style={{ color: \"black\" }}>Trivia</h3>\n                <div className=\"underline\"></div>\n              </section>\n            </Card>\n            <Card>\n              \n              {trivia.map((item,index) => {\n                return (\n                  <div className=\"trivia\" key={index}>\n                    <Card>\n                    <p>{item.triviaText}</p>\n                    </Card>\n                  </div>\n                );\n              })}\n              \n            </Card>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return <div>{renderTrivia()}</div>;\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Reviews.js",["116","117","118"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FaThumbsUp, FaThumbsDown, FaUserAlt } from \"react-icons/fa\";\nimport { Card } from \"@material-ui/core\";\n\nexport default function Reviews() {\n  const [reviews, setReviews] = React.useState([]);\n  const [reviewsToShow, setReviewsToShow] = React.useState([]);\n  const [offset, setOffset] = React.useState(5);\n  const [loading, setLoading] = React.useState(true);\n  const { id } = useParams();\n\n  React.useEffect(() => {\n    setLoading(true);\n    function getReviews() {\n      fetch(\n        `https://imdb8.p.rapidapi.com/title/get-user-reviews?tconst=${id}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-key\":\n              \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n            \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n          },\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"data\", data);\n          const reviews = data.reviews;\n          console.log(reviews);\n          if (reviews) {\n            const newReview = [];\n            reviews.map((item) => {\n              const { author, interestingVotes, reviewText } = item;\n              newReview.push({\n                username: author.displayName,\n                downVotes: interestingVotes.down ? interestingVotes.down : \"0\",\n                upVotes: interestingVotes.up ? interestingVotes.up : \"0\",\n                reviewText: reviewText,\n              });\n            });\n            console.log(newReview);\n            setReviews(newReview);\n            setReviewsToShow(newReview.slice(0, offset));\n          } else {\n            setReviews([]);\n          }\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n    getReviews();\n  }, []);\n\n  const handleClick = () => {\n    const newOffset = offset + 5;\n    setOffset(newOffset);\n    setReviewsToShow(reviews.slice(0, newOffset));\n  };\n\n  const shouldBeDisabled = () => {\n    console.log(\"offset: \", offset);\n    console.log(\"reviews.length: \", reviews.length);\n    return offset > reviews.length;\n  };\n\n  const renderReviews = () => {\n    return (\n      <div>\n        {reviewsToShow.length === 0 ? (\n          \"\"\n        ) : (\n          <div>\n            <Card>\n              <section className=\"section-title\">\n                <h3 style={{ color: \"black\" }}>User Reviews</h3>\n                <div className=\"underline\"></div>\n              </section>\n            </Card>\n            {reviewsToShow.map((review , index) => {\n              return (\n                <Card>\n                  <div className=\"reviews\" key = {index}>\n                    <h3 style={{ textAlign: \"left\", color: \"black\" }}>\n                      <span className=\"icon\">\n                        <FaUserAlt></FaUserAlt>\n                      </span>\n                      {review.username}\n                    </h3>\n                    <p>{review.reviewText}</p>\n                    <h3 style={{ textAlign: \"left\", color: \"black\" }}>\n                      <span className=\"icon\">\n                        <FaThumbsUp />\n                      </span>\n\n                      {review.upVotes}\n                      <span className=\"icon\">\n                        <FaThumbsDown />\n                      </span>\n\n                      {review.downVotes}\n                    </h3>\n                    <div\n                      className=\"underline\"\n                      style={{ width: \"45 rem\" }}\n                    ></div>\n                  </div>\n                </Card>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {renderReviews()}\n      <button\n        style={{align: \"center\"}}\n        className=\"btn btn-primary btn-details\"\n        disabled={shouldBeDisabled()}\n        onClick={handleClick}\n      >\n        {shouldBeDisabled() ? \"No Reviews\" : \"Click here for more reviews\"}\n      </button>\n    </div>\n  );\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/SingleShow.js",["119","120","121"],"import React from \"react\";\nimport Loading from \"./Loading\";\nimport { useParams, Link } from \"react-router-dom\";\nimport MainReview from \"./MainReview\";\nimport { Card } from \"@material-ui/core\";\nimport MainImages from './MainImages'\nimport Videos from './Videos'\nimport DidYouKnow from \"./DidYouKnow\";\nimport TopCast from \"./TopCast\";\n\n\nexport default function SingleShow() {\n  const { id } = useParams();\n  console.log(id);\n  const [loading, setLoading] = React.useState(false);\n  const [plot, setPlot] = React.useState(\"\");\n  const [details, setDetails] = React.useState({});\n  const [showLess, setShowLess] = React.useState(true);\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getPlot() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-synopses?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          const plot = data[0] ? data[0].text : \"\";\n          console.log('plot' , plot)\n          setPlot(plot);\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n\n    async function getDetails() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-meta-data?ids=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          const info = {\n            image: data[id].title.image\n              ? data[id].title.image.url\n              : \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\",\n            title: data[id].title.title,\n            titleType: data[id].title.titleType,\n            year: data[id].title.year ? data[id].title.year : \"Not available\",\n            rating: data[id].ratings.rating\n              ? data[id].ratings.rating\n              : \"Not available\",\n            topRank: data[id].ratings.topRank\n              ? data[id].ratings.topRank\n              : \"Not available\",\n            releaseDate: data[id].releaseDate\n              ? data[id].releaseDate\n              : \"Not available\",\n            numberOfEpisodes: data[id].title.numberOfEpisodes\n              ? data[id].title.numberOfEpisodes\n              : \"Not available\",\n            seriesStartYear: data[id].title.seriesStartYear\n              ? data[id].title.seriesStartYear\n              : \"Not available\",\n            seriesEndYear: data[id].title.seriesEndYear\n              ? data[id].title.seriesEndYear\n              : \"Not available\",\n          };\n          setDetails(info);\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n    \n    getDetails();\n    getPlot();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n  const {\n    image,\n    titleType,\n    title,\n    year,\n    rating,\n    topRank,\n    releaseDate,\n    seriesEndYear,\n    seriesStartYear,\n    numberOfEpisodes,\n  } = details;\n  console.log(details);\n\n  return (\n    <section className=\"section movie-section\">\n      <Link to=\"/\" className=\"btn btn-primary\">\n        back home\n      </Link>\n      <section className=\"section-title\">\n        <h2>{title}</h2>\n        <div className=\"underline\"></div>\n      </section>\n      <div className=\"single-movie\">\n        <img src={image} alt={image} className=\"img\"></img>\n        <div className=\"single-movie-info\">\n          <p>\n            <span className=\"single-movie-data\">Title Type:</span> {titleType}\n          </p>\n          <p>\n            <span className=\"single-movie-data\">Year:</span> {year}\n          </p>\n          <p>\n            <span className=\"single-movie-data\">Release date:</span>{\" \"}\n            {releaseDate}\n          </p>\n          <p>\n            <span className=\"single-movie-data\">Running Time:</span>{\" \"}\n            {seriesStartYear} - {seriesEndYear}\n          </p>\n          <p>\n            <span className=\"single-movie-data\">Number of Episodes:</span>{\" \"}\n            {numberOfEpisodes}\n          </p>\n          <p>\n            <span className=\"single-movie-data\">Rating:</span> {rating}\n          </p>\n          <p>\n            <span className=\"single-movie-data\">Top Rank:</span> {topRank}\n          </p>\n        </div>\n      </div>\n      <div>\n      {plot === \"\" ? (\n          \" \"\n        ) : (\n          <Card>\n            <section className=\"section-title\">\n              <h3 style={{ color: \"black\" }}>Storyline</h3>\n              <div className=\"underline\"></div>\n            </section>\n            <div className=\"plot\">\n              <p> {showLess ? `${plot.slice(0, 500)}` : plot}</p>\n              {plot === \"\" ? (\n                \" \"\n              ) : (\n                <>\n                  <a\n                    style={{ color: \"blue\", cursor: \"pointer\" }}\n                    onClick={() => setShowLess(!showLess)}\n                  >\n                    Read {showLess ? \"More\" : \"Less\"}\n                  </a>\n                </>\n              )}\n            </div>\n          </Card>\n        )}\n      </div>\n      <div>{<TopCast/>}</div>\n      <div>{<MainReview />}</div>\n      <div>{<MainImages/>}</div>\n      <div>{<DidYouKnow/>}</div>\n    </section>\n  );\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Images.js",["122","123","124","125","126","127"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\n\n\nexport default function Images() {\n  const { id } = useParams();\n  const [images, setimages] = useState([]);\n  const [imagesToShow, setImagesToShow] = useState([]);\n  const [offset, setOffset] = useState(9);\n  const [loading,setLoading] = useState(true)\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getImages() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-all-images?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"data\", data);\n          const apiResponse = data.resource.images;\n          console.log(apiResponse);\n          if (apiResponse) {\n            const newImages = [];\n            apiResponse.map((item) => {\n              const { url } = item;\n              newImages.push({\n                images: url,\n              });\n            });\n            console.log(\"newImage\", newImages);\n            setimages(newImages);\n            setImagesToShow(newImages.slice(0, offset));\n          } else {\n            setimages([]);\n          }\n          setLoading(false)\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false)\n        });\n    }\n\n    getImages();\n  }, []);\n\n  const handleClick = () => {\n    const newOffset = offset + 10;\n    setOffset(newOffset);\n    setImagesToShow(images.slice(0, newOffset));\n  };\n\n  const shouldBeDisabled = () => {\n    console.log(\"offset: \", offset);\n    console.log(\"images.length: \", images.length);\n    return offset > images.length;\n  };\n\n  const renderImages = () => {\n    return (\n      <div>\n        {imagesToShow.length === 0 ? (\n          \" \"\n        ) : (\n          <div>\n            <Card>\n              <section className=\"section-title\">\n                <h3 style={{ color: \"black\" }}>Photos</h3>\n                <div className=\"underline\"></div>\n              </section>\n            </Card>\n            <Card>\n              <div className=\"images-center\">\n                {imagesToShow.map((image , index) => {\n                  return (\n                    <div className=\"images-center\" key={index}>\n                      <article className=\"image\">\n                        <div className=\"images img\">\n                          <img src={image.images}></img>\n                        </div>\n                      </article>\n                    </div>\n                  );\n                })}\n              </div>\n            </Card>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {renderImages()}\n      <button\n        className=\"btn btn-primary btn-details\"\n        disabled={shouldBeDisabled()}\n        onClick={handleClick}\n      >\n        {shouldBeDisabled() ? \"No More Images\" : \"Click here for more Images\"}\n      </button>\n    </div>\n  );\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Loading.js",[],"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/DidYouKnow.js",[],"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MainImages.js",["128","129","130","131","132","133"],"import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\n\nexport default function MainImages() {\n  const { id } = useParams();\n  const [images, setimages] = React.useState([]);\n  const [imagesToShow, setImagesToShow] = React.useState([]);\n  const [offset, setOffset] = React.useState(3);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getImages() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-all-images?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"data\", data);\n          const apiResponse = data.resource.images;\n          console.log(apiResponse);\n          if (apiResponse) {\n            const newImages = [];\n            apiResponse.map((item) => {\n              const { url } = item;\n              newImages.push({\n                images: url,\n              });\n            });\n            console.log(\"newImage\", newImages);\n            setimages(newImages);\n            setImagesToShow(newImages.slice(0, offset));\n          } else {\n            setimages([]);\n          }\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n\n    getImages();\n  }, []);\n\n  \n\n  const renderImages = () => {\n    return (\n      <div>\n        {imagesToShow.length === 0 ? (\n          \" \"\n        ) : (\n          <div>\n            <Card>\n              <section className=\"section-title\">\n                <h3 style={{ color: \"black\" }}>Photos</h3>\n                <div className=\"underline\"></div>\n              </section>\n            </Card>\n            <Card>\n              <div className=\"images-center\">\n                {imagesToShow.map((image , index) => {\n                  return (\n                    <div className=\"images-center\"  key ={index}>\n                      <article className=\"image\">\n                        <div className=\"images img\">\n                          <img src={image.images}></img>\n                        </div>\n                      </article>\n                    </div>\n                  );\n                })}\n              </div>\n            </Card>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {renderImages()}\n      <Link\n        to={`/images/${id}`}\n        className=\"btn btn-primary btn-details\"\n        target=\"_blank\"\n      >\n        Click here for more images\n      </Link>\n    </div>\n  );\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MainReview.js",["134","135","136","137","138"],"import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { FaThumbsUp, FaThumbsDown, FaUserAlt } from \"react-icons/fa\";\nimport { Card } from \"@material-ui/core\";\n\nexport default function MainReview() {\n  const [reviews, setReviews] = React.useState([]);\n  const [reviewsToShow, setReviewsToShow] = React.useState([]);\n  const [offset, setOffset] = React.useState(1);\n  const [loading, setLoading] = React.useState(true);\n  const { id } = useParams();\n\n  React.useEffect(() => {\n    setLoading(true);\n    function getReviews() {\n      fetch(\n        `https://imdb8.p.rapidapi.com/title/get-user-reviews?tconst=${id}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-key\":\n              \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n            \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n          },\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"data\", data);\n          const reviews = data.reviews;\n          console.log(reviews);\n          if (reviews) {\n            const newReview = [];\n            reviews.map((item) => {\n              const { author, interestingVotes, reviewText } = item;\n              newReview.push({\n                username: author.displayName,\n                downVotes: interestingVotes.down ? interestingVotes.down : \"0\",\n                upVotes: interestingVotes.up ? interestingVotes.up : \"0\",\n                reviewText: reviewText,\n              });\n            });\n            console.log(newReview);\n            setReviews(newReview);\n            setReviewsToShow(newReview.slice(0, offset));\n          } else {\n            setReviews([]);\n          }\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n    getReviews();\n  }, []);\n\n  const renderReviews = () => {\n    return (\n      <div>\n        {reviewsToShow.length === 0 ? (\n          \"\"\n        ) : (\n          <div>\n            <Card>\n              <section className=\"section-title\">\n                <h3 style={{ color: \"black\" }}>User Reviews</h3>\n                <div className=\"underline\"></div>\n              </section>\n            </Card>\n            {reviewsToShow.map((review , index) => {\n              return (\n                <Card>\n                  <div className=\"reviews\" key = {index}>\n                    <h3 style={{ textAlign: \"left\", color: \"black\" }}>\n                      <span className=\"icon\">\n                        <FaUserAlt></FaUserAlt>\n                      </span>\n                      {review.username}\n                    </h3>\n                    <p>{review.reviewText}</p>\n                    <h3 style={{ textAlign: \"left\", color: \"black\" }}>\n                      <span className=\"icon\">\n                        <FaThumbsUp />\n                      </span>\n\n                      {review.upVotes}\n                      <span className=\"icon\">\n                        <FaThumbsDown />\n                      </span>\n\n                      {review.downVotes}\n                    </h3>\n                    <div\n                      className=\"underline\"\n                      style={{ width: \"45 rem\" }}\n                    ></div>\n                  </div>\n                </Card>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {renderReviews()}\n      <Link\n        to={`/reviews/${id}`}\n        className=\"btn btn-primary btn-details\"\n        target=\"_blank\"\n      >\n        Click here for more reviews\n      </Link>\n    </div>\n  );\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Videos.js",["139","140","141","142","143","144"],"import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\n//import { ReactVideo } from \"reactjs-media\";\n\nexport default function Videos() {\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(true);\n  const [videoID, setVideoID] = React.useState([]);\n  const [playURL , setPlayUrl] = React.useState([])\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getVideos() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-videos?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"data\", data);\n          const apiResponse = data.resource.videos;\n          console.log(\"apiResponse\", apiResponse);\n          if (apiResponse) {\n            const newVideo = [];\n            apiResponse.map((item) => {\n              const { id } = item;\n              newVideo.push({\n                vidID: id.substr(9, id.length),\n              });\n            });\n            console.log(\"newVideo\", newVideo);\n            setVideoID(newVideo.slice(0, 5));\n          }\n\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n\n    getVideos();\n  }, []);\n\n  React.useEffect(() => {\n    const playURLs = [];\n    videoID.map((id) => {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-video-playback?viconst=${id.vidID}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"6c8a14bc4emsh8f861d6c77a91e6p1e1bd5jsnfcd3fe38fba3\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"playback\", data)\n        const apiResponse = []\n        apiResponse.push(data.resource)\n        console.log(\"apiResponse\" , apiResponse)\n        if(apiResponse){\n        apiResponse.map((resource) => {\n           //resource.previews && playURLs.push(resource.previews);\n           if(\"previews\" in resource){\n             const { previews } = resource\n             playURLs.push({previews : previews})\n           }\n        })\n        console.log(\"playURLs\",playURLs)\n        setPlayUrl(playURLs)\n      }\n      })\n    })\n  }, [videoID]);\n\n  return (<div>\n    <Card>\n    {playURL.map((item,index)=>{\n      return(\n        <div key ={index}>\n          <video src = {item.previews.playUrl}  controls/>\n        </div>\n      )\n    })}\n    </Card>\n  </div>);\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MovieList.js",[],"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/TopCast.js",["145","146","147","148","149","150"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\nimport Loading from \"./Loading\";\n\nexport default function TopCast() {\n  const { id } = useParams();\n  const [castId, setCastId] = React.useState([]);\n  const [cast, setCast] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const newCast = [];\n\n  React.useEffect(() => {\n    setLoading(true);\n    function getCast() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-top-cast?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"dataCast\", data);\n          const apiResponse = [];\n          apiResponse.push(data);\n          const arr = apiResponse.toString();\n          const cast = arr.split(\"/\");\n          console.log(\"castArr\", cast);\n          const castID = [];\n          cast.forEach((value) => {\n            //console.log(\"value\" , value);\n            if (value.startsWith(\"nm\")) {\n              castID.push({ cID: value });\n            }\n          });\n          console.log(\"castId\", castID);\n          setCastId(castID.slice(0, 3));\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n    getCast();\n  }, []);\n\n  React.useEffect(() => {\n    setLoading(true);\n    castId.map((ids) => {\n      fetch(\n        `https://imdb8.p.rapidapi.com/title/get-charname-list?id=${ids.cID}&tconst=${id}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-key\":\n              \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n            \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n          },\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"charnameData\", data);\n          const apiResponse = data[ids.cID].charname;\n          console.log(\"apiResponse\", apiResponse);\n          if (apiResponse) {\n            apiResponse.map((item) => {\n              const {\n                characters,\n                endYear,\n                episodeCount,\n                image,\n                name,\n                startYear,\n              } = item;\n              newCast.push({\n                charname: characters ? characters : \"Not available\",\n                endYear: endYear ? endYear : \"Not available\",\n                startYear: startYear ? startYear : \"Not available\",\n                episodeCount: episodeCount ? episodeCount : \"Not available\",\n                image: image.url\n                  ? image.url\n                  : \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\",\n                name: name ? name : \"Not available\",\n              });\n            });\n          }\n          setLoading(false);\n        });\n    });\n\n    setCast(newCast);\n    console.log(\"cast\", newCast);\n  }, [castId]);\n\n  return (\n    <div>\n      <Card>\n        <section className=\"section-title\">\n          <h3 style={{ color: \"black\" }}>Cast</h3>\n          <div className=\"underline\"></div>\n        </section>\n      </Card>\n      <Card>\n        {cast.map((item, index) => {\n          return (\n            <div key={index}>\n              <div className=\"single-movie\">\n                <img\n                  src={item.image}\n                  alt={item.image}\n                  className=\"person-img\"\n                ></img>\n                <div className=\"single-movie-info\" style={{ color: \"black\" }}>\n                  <p>\n                    <span className=\"single-movie-data\"></span> {item.name}\n                  </p>\n                  <p>\n                    <span className=\"single-movie-data\"></span> {item.charname}\n                  </p>\n                  <p>\n                    <span className=\"single-movie-data\"></span> {item.startYear}\n                    -{item.endYear}\n                  </p>\n                  <p>\n                    <span className=\"single-movie-data\"></span>\n                    {item.episodeCount}\n                  </p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Card>\n    </div>\n  );\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/SearchForm.js",[],"/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/PopularMovie.js",["151","152"],"import React from \"react\";\n\nexport default function PopularMovie() {\n  const [titleID , setTitleID] = React.useState([])\n  React.useEffect(() => {\n    function getPopularMovie() {\n      fetch(\n        \"https://imdb8.p.rapidapi.com/title/get-most-popular-movies?\",\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-key\":\n              \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n            \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n          },\n        }\n      )\n        .then((response => response.json()))\n        .then((data)=> {\n          console.log(\"popular\",data);\n          const apiResponse = [];\n          apiResponse.push(data);\n          const arr = apiResponse.toString();\n          const title = arr.split(\"/\")\n          console.log(\"title\" , title)\n          const titleID = [];\n          title.forEach((value) => {\n            //console.log(\"value\" , value);\n            if (value.startsWith(\"tt\")) {\n              titleID.push({ tt: value });\n            }\n          });\n          console.log(\"titleID\", titleID);\n        })\n        .catch((err) => {\n          console.error(err);\n        })\n    }\n    getPopularMovie();\n  },[]);\n\n  return <div></div>;\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MainCrazyCredits.js",["153","154","155","156"],"import React, { useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\nimport { FaChevronRight } from \"react-icons/fa\";\n\nexport default function MainCrazyCredits() {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [credits, setCredits] = useState([]);\n  const [creditsToShow, setCreditsToShow] = useState([]);\n\n  React.useEffect(() => {\n    setLoading(true);\n    function getCredits() {\n      fetch(\n        `https://imdb8.p.rapidapi.com/title/get-crazycredits?tconst=${id}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-key\":\n              \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n            \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n          },\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"data\", data);\n          const apiResponse = data.crazycredits;\n          console.log(apiResponse);\n          if (apiResponse) {\n            const newCredits = [];\n            apiResponse.map((item) => {\n              const { text } = item;\n              newCredits.push({\n                text: text,\n              });\n            });\n            console.log(\"newCredits\", newCredits);\n            setCredits(newCredits);\n            setCreditsToShow(newCredits.slice(0, 1));\n          } else {\n            setCredits([]);\n          }\n\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n    getCredits();\n  }, []);\n\n  const renderCredits = () => {\n    return (\n      <div>\n        {creditsToShow.length === 0 ? (\n          \" \"\n        ) : (\n          <div>\n            <Card>\n              <div\n                style={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"0.04fr 0.04fr\",\n                  gridGap: \"2px\",\n                }}\n              >\n                <div\n                  className=\"section-title\"\n                  style={{\n                    marginBottom: \"0rem\",\n                    textAlign: \"left\",\n                    marginTop: \"3.5rem\",\n                    paddingLeft: \"2rem\",\n                  }}\n                >\n                  <h3\n                    style={{\n                      color: \"black\",\n                      marginBottom: \"0rem\",\n                    }}\n                  >\n                    Crazycredits\n                  </h3>\n                  <div\n                    className=\"underline\"\n                    style={{ marginLeft: \"0\", marginRight: \"0\" , width:\"18rem\" }}\n                  ></div>\n                </div>\n                <div className=\"next-btn\">\n                  <Link\n                    to={`/credits/${id}`}\n                    className=\"btn btn-primary btn-details\"\n                    target=\"_blank\"\n                  >\n                    <span style={{ size: \"7rem\" }}>\n                      <FaChevronRight />\n                    </span>\n                  </Link>\n                </div>\n              </div>\n            </Card>\n            <Card>\n              {creditsToShow.map((item, index) => {\n                return (\n                  <div className=\"trivia\" key={index}>\n                    <Card>\n                      <p>{item.text}</p>\n                    </Card>\n                  </div>\n                );\n              })}\n            </Card>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return <div>{renderCredits()}</div>;\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/MainTrivia.js",["157","158","159","160","161"],"import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Card } from \"@material-ui/core\";\nimport { FaChevronRight } from \"react-icons/fa\";\n\nexport default function MainTrivia() {\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(true);\n  const [trivia, setTrivia] = React.useState([]);\n  const [triviaToShow, setTriviaToShow] = React.useState([]);\n  const [offset, setOffset] = React.useState(1);\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getTrivia() {\n      fetch(`https://imdb8.p.rapidapi.com/title/get-trivia?tconst=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d4225d746amsh3c36ac6a4dcaf9ep1c2235jsnfe11e2c62954\",\n          \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"trivia\", data);\n          const spoilt = data.spoilt;\n          console.log(\"spoilt\", spoilt);\n          const unspoilt = data.unspoilt;\n          console.log(\"unspoilt\", unspoilt);\n          const apiResponse = [...spoilt, ...unspoilt];\n          console.log(\"apiResponse\", apiResponse);\n          if (apiResponse) {\n            const newTrivia = [];\n            apiResponse.map((item) => {\n              const { text } = item;\n              newTrivia.push({\n                triviaText: text,\n              });\n            });\n            console.log(\"newTrivia\", newTrivia);\n            setTrivia(newTrivia);\n            setTriviaToShow(newTrivia.slice(0, offset));\n          } else {\n            setTrivia([]);\n          }\n\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n\n    getTrivia();\n  }, []);\n\n  \n\n  const renderTrivia = () => {\n    return (\n      <div>\n        {triviaToShow.length === 0 ? (\n          \" \"\n        ) : (\n          <div>\n            <Card>\n              <div\n                style={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"0.04fr 0.04fr\",\n                  gridGap: \"2px\",\n                }}\n              >\n                <div\n                  className=\"section-title\"\n                  style={{\n                    marginBottom: \"0rem\",\n                    textAlign: \"left\",\n                    marginTop: \"3.5rem\",\n                    paddingLeft: \"2rem\",\n                  }}\n                >\n                  <h3\n                    style={{\n                      color: \"black\",\n                      marginBottom: \"0rem\",\n                    }}\n                  >\n                    Trivia\n                  </h3>\n                  <div\n                    className=\"underline\"\n                    style={{ marginLeft: \"0\", marginRight: \"0\" }}\n                  ></div>\n                </div>\n                <div className=\"next-btn\">\n                  <Link\n                    to={`/trivia/${id}`}\n                    className=\"btn btn-primary btn-details\"\n                    target=\"_blank\"\n                  >\n                    <span style={{ size: \"7rem\" }}>\n                      <FaChevronRight />\n                    </span>\n                  </Link>\n                </div>\n              </div>\n            </Card>\n            <Card>\n              {triviaToShow.map((item , index) => {\n                return (\n                  <div className=\"trivia\" key = {index}>\n                    <Card>\n                      <p>{item.triviaText}</p>\n                    </Card>\n                  </div>\n                );\n              })}\n            </Card>\n          </div>\n        )}\n      </div>\n    );\n  };\n  return <div>{renderTrivia()}</div>;\n}\n","/home/aashiyatanwar/MovieProject/MovieProject/movie-app/src/Movie.js",[],{"ruleId":"162","severity":1,"message":"163","line":26,"column":34,"nodeType":"164","messageId":"165","endLine":26,"endColumn":36},{"ruleId":"166","severity":1,"message":"167","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":40,"column":36,"nodeType":"164","messageId":"165","endLine":40,"endColumn":38},{"ruleId":"170","severity":1,"message":"171","line":60,"column":6,"nodeType":"172","endLine":60,"endColumn":8,"suggestions":"173"},{"ruleId":"166","severity":1,"message":"174","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":82,"column":6,"nodeType":"172","endLine":82,"endColumn":8,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":145,"column":19,"nodeType":"178","endLine":148,"endColumn":20},{"ruleId":"166","severity":1,"message":"167","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":17},{"ruleId":"166","severity":1,"message":"179","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":22},{"ruleId":"166","severity":1,"message":"180","line":10,"column":18,"nodeType":"168","messageId":"169","endLine":10,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":34,"column":36,"nodeType":"164","messageId":"165","endLine":34,"endColumn":38},{"ruleId":"170","severity":1,"message":"181","line":56,"column":6,"nodeType":"172","endLine":56,"endColumn":8,"suggestions":"182"},{"ruleId":"166","severity":1,"message":"167","line":10,"column":10,"nodeType":"168","messageId":"169","endLine":10,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":34,"column":32,"nodeType":"164","messageId":"165","endLine":34,"endColumn":34},{"ruleId":"170","severity":1,"message":"183","line":57,"column":6,"nodeType":"172","endLine":57,"endColumn":8,"suggestions":"184"},{"ruleId":"166","severity":1,"message":"174","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":93,"column":6,"nodeType":"172","endLine":93,"endColumn":8,"suggestions":"185"},{"ruleId":"176","severity":1,"message":"177","line":165,"column":19,"nodeType":"178","endLine":168,"endColumn":20},{"ruleId":"166","severity":1,"message":"186","line":1,"column":27,"nodeType":"168","messageId":"169","endLine":1,"endColumn":36},{"ruleId":"166","severity":1,"message":"187","line":2,"column":21,"nodeType":"168","messageId":"169","endLine":2,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":11,"column":10,"nodeType":"168","messageId":"169","endLine":11,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":31,"column":36,"nodeType":"164","messageId":"165","endLine":31,"endColumn":38},{"ruleId":"170","severity":1,"message":"188","line":52,"column":6,"nodeType":"172","endLine":52,"endColumn":8,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":86,"column":27,"nodeType":"178","endLine":86,"endColumn":51},{"ruleId":"166","severity":1,"message":"192","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":16},{"ruleId":"166","severity":1,"message":"180","line":9,"column":18,"nodeType":"168","messageId":"169","endLine":9,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":10,"column":10,"nodeType":"168","messageId":"169","endLine":10,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":30,"column":36,"nodeType":"164","messageId":"165","endLine":30,"endColumn":38},{"ruleId":"170","severity":1,"message":"188","line":51,"column":6,"nodeType":"172","endLine":51,"endColumn":8,"suggestions":"193"},{"ruleId":"190","severity":1,"message":"191","line":75,"column":27,"nodeType":"178","endLine":75,"endColumn":51},{"ruleId":"166","severity":1,"message":"194","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":17},{"ruleId":"166","severity":1,"message":"180","line":9,"column":18,"nodeType":"168","messageId":"169","endLine":9,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":10,"column":10,"nodeType":"168","messageId":"169","endLine":10,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":34,"column":32,"nodeType":"164","messageId":"165","endLine":34,"endColumn":34},{"ruleId":"170","severity":1,"message":"183","line":57,"column":6,"nodeType":"172","endLine":57,"endColumn":8,"suggestions":"195"},{"ruleId":"166","severity":1,"message":"187","line":2,"column":21,"nodeType":"168","messageId":"169","endLine":2,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":8,"column":10,"nodeType":"168","messageId":"169","endLine":8,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":30,"column":36,"nodeType":"164","messageId":"165","endLine":30,"endColumn":38},{"ruleId":"170","severity":1,"message":"171","line":49,"column":6,"nodeType":"172","endLine":49,"endColumn":8,"suggestions":"196"},{"ruleId":"162","severity":1,"message":"163","line":53,"column":22,"nodeType":"164","messageId":"165","endLine":53,"endColumn":24},{"ruleId":"162","severity":1,"message":"163","line":69,"column":36,"nodeType":"164","messageId":"165","endLine":69,"endColumn":38},{"ruleId":"166","severity":1,"message":"197","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":15},{"ruleId":"166","severity":1,"message":"167","line":10,"column":10,"nodeType":"168","messageId":"169","endLine":10,"endColumn":17},{"ruleId":"170","severity":1,"message":"171","line":49,"column":6,"nodeType":"172","endLine":49,"endColumn":8,"suggestions":"198"},{"ruleId":"162","severity":1,"message":"163","line":53,"column":22,"nodeType":"164","messageId":"165","endLine":53,"endColumn":24},{"ruleId":"162","severity":1,"message":"163","line":71,"column":36,"nodeType":"164","messageId":"165","endLine":71,"endColumn":38},{"ruleId":"170","severity":1,"message":"199","line":98,"column":6,"nodeType":"172","endLine":98,"endColumn":14,"suggestions":"200"},{"ruleId":"166","severity":1,"message":"201","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":17},{"ruleId":"166","severity":1,"message":"202","line":4,"column":20,"nodeType":"168","messageId":"169","endLine":4,"endColumn":30},{"ruleId":"166","severity":1,"message":"167","line":8,"column":10,"nodeType":"168","messageId":"169","endLine":8,"endColumn":17},{"ruleId":"166","severity":1,"message":"203","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":33,"column":36,"nodeType":"164","messageId":"165","endLine":33,"endColumn":38},{"ruleId":"170","severity":1,"message":"171","line":54,"column":6,"nodeType":"172","endLine":54,"endColumn":8,"suggestions":"204"},{"ruleId":"166","severity":1,"message":"167","line":8,"column":10,"nodeType":"168","messageId":"169","endLine":8,"endColumn":17},{"ruleId":"166","severity":1,"message":"205","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":16},{"ruleId":"166","severity":1,"message":"180","line":11,"column":18,"nodeType":"168","messageId":"169","endLine":11,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":35,"column":36,"nodeType":"164","messageId":"165","endLine":35,"endColumn":38},{"ruleId":"170","severity":1,"message":"181","line":57,"column":6,"nodeType":"172","endLine":57,"endColumn":8,"suggestions":"206"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["207"],"'Videos' is defined but never used.",["208"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'triviaToShow' is assigned a value but never used.","'setOffset' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'id' and 'offset'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTriviaToShow' needs the current value of 'offset'.",["209"],"React Hook React.useEffect has missing dependencies: 'id' and 'offset'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setReviewsToShow' needs the current value of 'offset'.",["210"],["211"],"'useEffect' is defined but never used.","'Link' is defined but never used.","React Hook React.useEffect has missing dependencies: 'id' and 'offset'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setImagesToShow' needs the current value of 'offset'.",["212"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'images' is assigned a value but never used.",["213"],"'reviews' is assigned a value but never used.",["214"],["215"],"'Loading' is defined but never used.",["216"],"React Hook React.useEffect has missing dependencies: 'id' and 'newCast'. Either include them or remove the dependency array.",["217"],"'titleID' is assigned a value but never used.","'setTitleID' is assigned a value but never used.","'credits' is assigned a value but never used.",["218"],"'trivia' is assigned a value but never used.",["219"],{"desc":"220","fix":"221"},{"desc":"220","fix":"222"},{"desc":"223","fix":"224"},{"desc":"223","fix":"225"},{"desc":"220","fix":"226"},{"desc":"223","fix":"227"},{"desc":"223","fix":"228"},{"desc":"223","fix":"229"},{"desc":"220","fix":"230"},{"desc":"220","fix":"231"},{"desc":"232","fix":"233"},{"desc":"220","fix":"234"},{"desc":"223","fix":"235"},"Update the dependencies array to be: [id]",{"range":"236","text":"237"},{"range":"238","text":"237"},"Update the dependencies array to be: [id, offset]",{"range":"239","text":"240"},{"range":"241","text":"240"},{"range":"242","text":"237"},{"range":"243","text":"240"},{"range":"244","text":"240"},{"range":"245","text":"240"},{"range":"246","text":"237"},{"range":"247","text":"237"},"Update the dependencies array to be: [castId, id, newCast]",{"range":"248","text":"249"},{"range":"250","text":"237"},{"range":"251","text":"240"},[1702,1704],"[id]",[2694,2696],[1749,1751],"[id, offset]",[1880,1882],[3112,3114],[1563,1565],[1569,1571],[1889,1891],[1490,1492],[1520,1522],[3110,3118],"[castId, id, newCast]",[1613,1615],[1809,1811]]